<!--
	This TestScript is generic - it will work with any Patient resource
	as long as Patient is in Patient/patient.xml and it has a
	given and family name and dob that make it unique.
-->

<TestScript xmlns="http://hl7.org/fhir">
	<id value="333"/>
	<contained>
		<TestScript>
			<id value="1"/>
			<test>  <!-- basic operation and validation -->
				<description value="condition context"/>
				<action>
					<operation>
						<description value="looking for patient"/>
						<type>
							<code value="search"/>
						</type>
						<resource value="Patient"> </resource>
						<contentType value="json"> </contentType>
						<params value="?given=${FirstName}&amp;family=${LastName}&amp;birthdate=${birthDate}"> </params>
						<responseId value="patient1-search"/>
					</operation>
				</action>
				<action>
					<assert>
						<description value="Search has ok status"/>
						<sourceId value="patient1-search"/>
						<response value="okay"/>
						<warningOnly value="false"/>
					</assert>
				</action>
				<action>
					<assert>
						<description value="No OperationOutcome"/>
						<compareToSourceId value="patient1-search"/>
						<compareToSourceExpression value="Bundle.entry.response.outcome.where(is(FHIR.OperationOutcome)).empty()"/>
						<warningOnly value="false"/>
					</assert>
				</action>
				<action>
  				<assert>
	  			  <description value="check for multiple copies on the server"/>
						<expression value="Bundle.total"/>
						<operator value="lessThan"/>
						<value value="2"/>
						<warningOnly value="false"/>
					</assert>
				</action>
			</test>
			<test>  <!-- asserts to trigger conditional - one fail and condition is false -->
				<description value="assertion"/>
				<action>
					<assert>
						<description value="needs loading"/>
						<expression value="Bundle.total"/>
						<operator value="equals"/>
						<value value="0"/>
						<warningOnly value="false"/>
					</assert>
				</action>
			</test>
		</TestScript>
	</contained>

	<fixture id="patient1">
        <!--
           This patient comes out of the test definition
        -->
		<autocreate value="false"/>
		<autodelete value="false"/>

		<resource>
			<reference value="Patient/patient.xml"/>
		</resource>
	</fixture>
	<variable>
		<name value="FirstName"></name>
		<sourceId value="patient1"></sourceId>
		<expression value="Patient.name.given"></expression>
	</variable>
	<variable>
		<name value="LastName"></name>
		<sourceId value="patient1"></sourceId>
		<expression value="Patient.name.family"></expression>
	</variable>
	<variable>
		<name value="birthDate"></name>
		<sourceId value="patient1"></sourceId>
		<expression value="Patient.birthDate"></expression>
	</variable>
	<test>
		<modifierExtension url="https://github.com/usnistgov/asbestos/wiki/TestScript-Conditional">
			<valueReference>
				<reference value="#1"/>
			</valueReference>
<!--			<valueString value="#patientNeedsLoading"/>-->
		</modifierExtension>
		<description value="conditional patient submission"/>
		<action>
			<operation>
                <!-- references patient from resourceCache in EC -->
				<description value="submit patient"/>
				<type>
					<code value="create"/>
				</type>
				<sourceId value="patient1"/>
				<responseId value="patient1-response"/>
			</operation>
		</action>
	</test>
</TestScript>
